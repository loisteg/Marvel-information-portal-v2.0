{"version":3,"sources":["components/pages/SinglePage.js","components/skeleton/Skeleton.js","utils/setContent.js"],"names":["SinglePage","Component","dataType","id","useParams","useState","data","setData","useMarvelService","getComic","getCharacter","clearError","process","setProcess","useEffect","updateData","then","onDataLoaded","setContent","Skeleton","className","Spinner","ErrorMessage","Error"],"mappings":"iKA4CeA,UArCI,SAAH,GAA+B,IAA1BC,EAAS,EAATA,UAAWC,EAAQ,EAARA,SACjBC,EAAMC,cAAND,GACP,EAAwBE,mBAAS,MAAK,mBAA/BC,EAAI,KAAEC,EAAO,KACpB,EAAkEC,cAA3DC,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aAAcC,EAAU,EAAVA,WAAYC,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAEpDC,qBAAU,WACNC,MACD,CAACZ,IAEJ,IAAMY,EAAa,WAGf,OAFAJ,IAEQT,GACJ,IAAK,QACDO,EAASN,GACJa,KAAKC,GACLD,MAAK,kBAAMH,EAAW,gBAC3B,MACJ,IAAK,YACDH,EAAaP,GACRa,KAAKC,GACLD,MAAK,kBAAMH,EAAW,kBAIjCI,EAAe,SAACX,GAClBC,EAAQD,IAGZ,OACI,qCACI,cAAC,IAAS,IACTY,YAAWN,EAASX,EAAWK,Q,kECpBjCa,EAjBE,WACb,OACI,qCACI,mBAAGC,UAAU,eAAc,SAAC,iDAC5B,sBAAKA,UAAU,WAAU,UACrB,sBAAKA,UAAU,yBAAwB,UACnC,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,iCCMhBF,IAfI,SAACN,EAASX,EAAWK,GACpC,OAAOM,GACH,IAAK,UACD,OAAO,cAAC,EAAQ,IACpB,IAAK,UACD,OAAO,cAACS,EAAA,EAAO,IACnB,IAAK,YACD,OAAO,cAACpB,EAAS,CAACK,KAAMA,IAC5B,IAAK,QACD,OAAO,cAACgB,EAAA,EAAY,IACxB,QACI,MAAM,IAAIC,MAAM,+B","file":"static/js/8.31d7193f.chunk.js","sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n        const {id} = useParams();\r\n        const [data, setData] = useState(null);\r\n        const {getComic, getCharacter, clearError, process, setProcess} = useMarvelService();\r\n\r\n        useEffect(() => {\r\n            updateData()\r\n        }, [id])\r\n\r\n        const updateData = () => {\r\n            clearError();\r\n\r\n            switch (dataType) {\r\n                case 'comic':\r\n                    getComic(id)\r\n                        .then(onDataLoaded)\r\n                        .then(() => setProcess('confirmed'));\r\n                    break;\r\n                case 'character':\r\n                    getCharacter(id)\r\n                        .then(onDataLoaded)\r\n                        .then(() => setProcess('confirmed'));\r\n            }\r\n        }\r\n\r\n        const onDataLoaded = (data) => {\r\n            setData(data);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <AppBanner/>\r\n                {setContent(process, Component, data)}\r\n            </>\r\n        )\r\n}\r\n\r\nexport default SinglePage;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n    switch(process) {\r\n        case 'waiting': \r\n            return <Skeleton/>;\r\n        case 'loading': \r\n            return <Spinner/>\r\n        case 'confirmed':\r\n            return <Component data={data}/>;\r\n        case 'error': \r\n            return <ErrorMessage/>;\r\n        default:\r\n            throw new Error('Unexpected process state')\r\n    }\r\n}\r\n\r\nexport default setContent;"],"sourceRoot":""}